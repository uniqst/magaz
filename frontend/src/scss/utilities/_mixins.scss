$browser-context: 12px; // Default

.nopadding {
  padding: 0 !important;
  margin: 0 !important;
}

// @mixin px-0() {
//   padding-left: 0;
//   padding-right: 0;
// }

@mixin px($left: null, $right: null) {
  @if $left and $right {
    padding-left: $left;
    padding-right: $right;
  } @else if not $left and $right {
    // do nothing
  } @else if $left and not $right {
    padding-left: $left;
    padding-right: $left;
  } @else {
    padding-left: auto;
    padding-right: auto;
  }
}

@mixin mx($m-left: null, $m-right: null) {
  @if $m-left and $m-right {
    margin-left: $m-left;
    margin-right: $m-right;
  } @else if not $m-left and $m-right {
    // do nothing
  } @else if $m-left and not $m-right {
    margin-left: $m-left;
    margin-right: $m-left;
  } @else {
    margin-left: auto;
    margin-right: auto;
  }
}

@mixin mx-a() {
  margin-left: auto;
  margin-right: auto;
}

@mixin bg-img($url, $size: cover, $position: center, $repeat: no-repeat) {
  @if $url != null {
    background-image: url($url);
  }
  background-size: $size;
  background-repeat: $repeat;
  background-position: $position;
}

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@function rem($pixels, $context: $browser-context) {
  @return #{$pixels/$context}rem;
}

$breakpoints: (
  'sm'   : ( min-width:  576px ),
  'md'  : ( min-width:  768px ),
  'lg'   : ( min-width: 992px ),
  'xl' : ( min-width: 1200px ),
  'xxl' : ( min-width: 1400px )
);

$breakpoints-to: (
  'sm'   : ( max-width:  575px ),
  'md'  : ( max-width:  767px ),
  'lg'   : ( max-width: 991px ),
  'xl' : ( max-width: 1199px )
);

@mixin mq-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints-to, $name) {
    // Prints a media query based on the value
    @media only screen and #{inspect(map-get($breakpoints-to, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint-to}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin mq($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media only screen and #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}
